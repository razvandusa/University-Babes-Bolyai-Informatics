1.  Find all the usernames that logged in from "economica" on a Sunday
cat last.fake | grep "economica.*Sun" | cut -d" " -f1 | sort -u

2.  Find all the users that logged into the system after 11PM
cat last.fake | awk -f prog_2.awk | sort -u

3.  Display the full names of the users having a username that starts with "m" and with a user ID divisible by 7.
cat passwd.fake | grep "^m" | awk -F: '$3 % 7 == 0 { print $5 }'

4.  Display all the distinct TTYs used by user root.
cat ps.fake | grep "^root" | awk '{print $6}' | sort -u

5.  Find the full names of all the users whose username ends in 88
cat passwd.fake | grep -E "^[^:]*88:" | awk -F: '{print $5}'

6.  Find all users whose user ID has three digits and starts with 23
cat passwd.fake |awk -F: 'length($3) == 3 {if (substr($3,1,1) == 2 && substr($3,2,1) == 3) {print $5}}'

7.  Find all usersnames starting with "t" that logged on "pts/9"
cat last.fake | awk '$2 == "pts/9" {print $1}' | grep -E "^t" | sort -u

8.  Find all the distinct usernames starting with "r" that are currently running programs, and display them duplicating every vowel
cat ps.fake | grep -E "^r" | awk '{print $1}' | sort -u | sed -E "s/([aeiou])/\1\1/gi"

9.  Display all the distinct lines left in /etc/passwd.fake after deleting all letter and digits and spaces.
cat passwd.fake | sed -E "s/[^:/-]//g" | sort -u

10. Display all the distinct lines left in /etc/passwd.fake after deleting all characters except "r".
cat passwd.fake | sed -E "s/[^r]//g" | sort -u

11. Calculate the average of the PIDs of the processes currently running in the system.
cat ps.fake | awk -f prog_11.awk

12. Display the most frequent names of the users (first, middle, etc. but not last) in the system.
awk -F: '{print $5}' passwd.fake | sed -E "s/-/ /" | cut -d" " -f1,2 | sed -E "s/ /\n/" | sort | uniq -c | sort -r